box: node
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
services:
  - neowaylabs/postgis
  
build:
  steps:
build:
  steps:
    - install-packages:
      packages: postgresql-9.4-postgis-scripts

    - script:
      name: create postgres env vars
      code: |
        export POSTGRES_PORT_5432_TCP_ADDR=$POSTGIS_PORT_5432_TCP_ADDR
        export POSTGRES_PORT_5432_TCP_PORT=$POSTGIS_PORT_5432_TCP_PORT
        export POSTGRES_ENV_POSTGRES_USER=docker
        export POSTGRES_ENV_POSTGRES_PASSWORD=postgis
        export WERCKER_POSTGRESQL_ADAPTER=postgis

    - script:
      name: Debug
      code: |
        ls -al /usr/share/postgresql/9.4/extension/postgis.control
        cat /usr/share/postgresql/9.4/extension/postgis.control
        echo "Env: "
        env

    - rails-database-yml

    # A step that describes the running environment
    - script:
      name: echo ruby information
      code: |
        echo "ruby version $(ruby --version) running"
        echo "from location $(which ruby)"
        echo "gem list: $(gem list)"

    # A step that loads the database schema in order to run the tests
    - script:
      name: Set up db
      code: |
        export PGHOST=$POSTGRES_PORT_5432_TCP_ADDR
        export PGPORT=$POSTGRES_PORT_5432_TCP_PORT
        export PGUSER=docker
        export PGPASSWORD=postgis
        echo "Creating application database ..."
        psql -c "CREATE DATABASE pgtest WITH TEMPLATE = template0 ENCODING = 'UTF8';"
        psql -d pgtest -f ./schema.sql

    - npm-install

    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"
